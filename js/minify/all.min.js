
'use strict';while(isFree('north')&&north()){}
while(isFree('east')&&east()){}
while(isFree('east')&&east()||isFree('south')&&south()){}
while(isFree('west')&&west()||isFree('south')&&south()){}
while(isFree('west')&&west()||isFree('north')&&north()){}
while(isFree('west')&&west()||isFree('south')&&south()){}
while(isFree('east')&&east()){}
while(isFree('east')&&east()||isFree('south')&&south()){}
while(isFree('east')&&east()||isFree('north')&&north()){}
while(isFree('east')&&east()||isFree('south')&&south()){}
north();while(isFree('west')&&west()||isFree('south')&&south()){}
while(isFree('east')&&east()){}
var e;while(isFree('south')&&south()){}
while(isFree('east')&&east()){}
while(isFree('north')&&north()){}
while(isFree('east')&&east()){}
while(isFree('east')&&east()||isFree('south')&&south()){}
while(isFree('west')&&west()){}
while(isFree('south')&&south()){}
while(isFree('west')&&west()){}
while(e!="end"){while(isFree('south')&&south()){}
while(isFree('east')&&e!="end"){e=east();}}
var go,exit;function findWay(){if(isFree('north')){go=north;}else if(isFree('east')){go=east;}else if(isFree('south')){go=south;}else{go=west;}}
function steps(){if(go==north&&exit!="end"){while(!isFree('east')&&isFree('north')){go();}
if(isFree('east')){exit=east();go=east;steps();}else if(isFree('west')){exit=west();go=west;steps();}else{exit=south();go=south();steps();}}else if(go==east&&exit!="end"){while(!isFree('south')&&isFree('east')){go();}
if(isFree('south')){exit=south();go=south;steps();}else if(isFree('north')){exit=north();go=north;steps();}else{exit=west();go=west;steps();}}else if(go===south&&exit!="end"){while(!isFree('west')&&isFree('south')){go();}
if(isFree('west')){exit=west();go=west;steps();}else if(isFree('east')){exit=east();go=east;steps();}else{exit=north();go=north;steps();}}else if(go===west&&exit!="end"){while(!isFree('north')&&isFree('west')){go();}
if(isFree('north')){exit=north();go=north;steps();}else if(isFree('south')){exit=south();go=south;steps();}else{exit=east();go=east;steps();}}else{console.log("Поздравляю вы прошли все лабиринты!");}}
findWay();steps();var step="Begin:",returnAnser=true;function chit(){if(isFree('west')&&step[step.length-1]!='R'){while(isFree('west')){west();step=step+'L';};}else if(isFree('east')&&step[step.length-1]!='L'){while(isFree('east')&&returnAnser!="end"){returnAnser=east();step=step+'R';};}else if(isFree('south')&&step[step.length-1]!='T'){while(isFree('south')){south();step=step+'B';};}else if(isFree('north')&&step[step.length-1]!='B'){while(isFree('north')){north();step=step+'T';};}else{north();step=step+"trable-T";}}
while(returnAnser!="end"){chit();};"use strict";var toNumber=function toNumber(a,b){if(a&&b){a=+a;b=+b;return[a,b];}else{return null;}};var add=function add(a,b){if(a&&b){return a+b;}else{return console.log("Необходимо ввести минимум пару чисел!");}};var fn=function fn(){var anonFunc=Array.prototype.slice.call(arguments);return function(){var enterVars=Array.prototype.slice.call(arguments);for(var i=0;i<anonFunc.length;i++){enterVars=anonFunc[i].apply(null,enterVars);}
console.log("Результат выполнения функции:",enterVars);};};add=fn(toNumber,add);add('1','2');'use strict';function map(arr,fu){var newArr=[];for(var i=0;i<arr.length;i++){if(fu){fu(arr[i]);newArr.push(arr[i]);}else{newArr.push(arr[i]);}}
return newArr;}
function reduce(arr,fu,initVal){var retVal=arr[0];if(initVal===0||true){retVal=initVal;}
for(var i=0;i<arr.length;i++){if(fu){retVal=retVal+fu(arr[i]);}else{return undefined;}}
return retVal;}
function forEach(arr,fu){for(var i=0;i<arr.length;i++){if(fu){arr[i]=fu(arr[i]);}}
return arr;}
function some(arr,fu){for(var i=0;i<arr.length;i++){if(fu&&fu(arr[i])){return true;}}
return false;}
function every(arr,fu){for(var i=0;i<arr.length;i++){if(fu&&!fu(arr[i])){return false;}}
return true;}
function indexOf(arr,initVal){for(var i=0;i<arr.length;i++){if(initVal==arr[i]){return i;}}
return-1;}
function reverse(arr){var newArr=[],number=0;for(var i=arr.length-1;i>=0;i--){newArr[number]=arr[i];number++;}
return newArr;}
function join(arr,initVal){var newStr='';for(var i=0;i<arr.length;i++){newStr=newStr+arr[i]+initVal;}
return newStr;}"use strict";map(function(x){return x+1;});map(function(x){return x+3;});